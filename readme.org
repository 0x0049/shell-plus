#+TITLE: shell+ â€¢ [[https://travis-ci.org/0x0049/shell-plus.svg?branch=master]]
#+STARTUP: showeverything

Shell enhancements for =Emacs=.

** Features
   - Spawn a command in a separate buffer (~shell+-async-shell-buffer~).
     - This has an eshell alias: ~async~. My preference is to use
       ~display-buffer-alist~ to make the opened buffer split the current window
       below. This lets you spawn long-running commands and keep an eye on them
       while leaving your main shell buffer free.
   - Spawn a command without a buffer (~shell+-async-shell-no-buffer~).
   - Provide ~shell+-eshell~ which will:
     - Keep a unique history per eshell buffer it opens.
     - When calling with a prefix arg, ask for a name and history file.
     - Open a new eshell buffer if there are none that are free.
   - ~shell+-eshell-cd~ is the same as ~shell+-eshell~ except:
     - Change to the directory of the buffer that was focused.
   - Search eshell history (~shell+-eshell-insert-history~).
   - Helper function for prompting for choices (~shell+-prompt~).
   - Hibernate and lock commands.

** Usage
   I use [[https://github.com/jwiegley/use-package][use-package]] and [[https://github.com/raxod502/straight.el][straight.el]]:

   #+begin_src elisp
   (use-package shell+
     :straight (:host github :repo "0x0049/shell-plus")
     :defer t)
   #+end_src

   To bind a key for the search history, try:

   #+begin_src elisp
     (add-hook 'eshell-mode-hook
               #'(lambda ()
                   (local-set-key (kbd "C-c h") #'shell+-eshell-insert-history))))
   #+end_src

   To use the eshell enhancements run ~shell+-eshell~ instead of ~eshell~. You might
   also want to add this if you use ~projectile~:

   #+begin_src elisp
  (defun my-projectile-run-eshell ()
    "Open existing project `eshell' or a new one if all are busy."
    (interactive)
    (projectile-with-default-dir (projectile-ensure-project (projectile-project-root))
      (shell+-eshell (projectile-project-name))))
   #+end_src

   To disable unique eshell history:

   #+begin_src elisp
     (setq shell+-eshell-unique-history nil)
   #+end_src

   This will let you use ~shell+-eshell~ for the other enhancements while keeping
   a global history between all the shells.
